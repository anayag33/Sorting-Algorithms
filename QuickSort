#include <iostream>
#include <vector>
using namespace std;

int partition (vector<int> A, int start, int end){
  int pivot = A[start];
  int pivot_index = start;
  int i = start + 1;
  int j = end;
  while (i <= j){
    while( i<= end && A[i] <= pivot){
      i++;
    }
    while( j>=start && A[j] > pivot){
      j++;
    }
    if (i<j){
      swap(A[i], A[j]);
    }
  }
  swap(A[j], A[pivot.index]);
  return j;
}

void QuickSort (vector<int>& A, int start, int end){
  int pivot_index = partition(A, start, end);
  QuickSort(A, start, pivot_index-1);
  QuickSort(A, pivot_index, end);
}

int main(){
  vector<int> data = {6, 5, 4, 3, 2, 1};
  QuickSort(data, 0, 5);
  for (int i = 0; i<6; i++){
    cout << data[i] << endl;
  }
}
